UC1 where User (a user) deploys Application (an app):
  1. The user creates Repository (a repo);
  2. The repo launches the app;
  3. The user reads the repo;
  4. The user updates the repo;
  5. The user deletes the repo;
  6. The user pays for the repo.

UC2 where Repository (a repo) launches Application (an app):
  1. The repo creates Deployment (a deployment);
  2. The deployment executes the app;
  3. The repo deletes the deployment
    "every 5 minutes, if repository sources are updated".

UC2.3 where Deployment (a deployment) executes Application (an app):
  1. Cloud (a cloud) creates Server (a server);
  2. The server creates Container (a container);
  3. The container creates the app;
  4. Visitor (a visitor) utilizes the app;
  5. The server deletes the container;
  6. The cloud deletes the server.

UC6 where User (a user) pays for Repository (a repo):
  1. The repo updates the user
    "decreasing his balance, every hour according to
    invoices of containers of deployments of repository";
  2. PayPal (a paypal) updates the user
    "charging his credit card and adding funds to his balance";
  3. The repo updates the user
    "via email when his balance is below $5".

UC10.1 where Visitor (a visitor) utilizes Application (an app):
  1. The visitor reads the app;
  2. Fail as "low balance" when "user balance is below $5";
  3. The visitor creates Invoice (an invoice);
  4. The visitor updates the invoice
    "adding utilized CPU and traffic usage to it".

User is "a person who uses or wants to use hosting and is identified
by the system (logged in)". User is an actor. User includes:
  repo-s? as Repository!,
  URN as "a unique identifier of itself, for example urn:github:526301",
  authTokens as "a list of auth tokens to each auth provider the
    user connected to, e.g., Google, Facebook, etc.",
  balance as "amount of money available, can be stored as
    integer number of cents".

Repository is "a local copy of files and folders being pulled every
  5 minutes from some remote source". Repository includes:
  name as "a unique name of the repo in user's account",
  coordinates as "URI with user/password where sources can be found",
  deployment-s? as Deployment!,
  dockerFile as "a configuration for building and starting Container-s",
  domain-s as "a unique name that identifies a website and
    may not exceed a total length of 253 ASCII characters
    in its textual representation",
  port-s as "a 16-bit number that identifies a network port
    for the establishment of host-to-host connectivity".

Deployment is "a deployed and working instance of Repository". Deployment
  includes:
  container-s as Container! "the number of containers should be
    modified in runtime according to the current CPU load of existing
    containers.".

Container is "a virtual operating system running user's
  applications build from Repository. Virtualization technology
  a) must be open source or free, so that we avoid license costs,
  b) must be mature product that is currently supported,
  c) must provide full file system and network isolation,
  d) must enable memory and CPU quotas". Container includes:
  server as Server,
  logs as "text logs available in runtime and as historical records",
  state as "one from the list: building, running",
  invoice-s? as Invoice!.

Server is "a physical (or virtual) machine provided on-demand by Cloud". Server
  includes:
  ip as "IP address, as in RFC 1918",
  state as "one from the list: starting, running, terminating",
  container-s? as Container!.

Cloud is "a provider of on-demand virtual or physical servers, for example AWS".
Cloud includes:
  credentials as "access credentials, including login, password, etc.",
  server-s? as Server!.

Invoice is "an atomic track record of the usage of resources,
  during one calendar hour". Invoice includes:
  container as Container,
  hour as "a calendar hour, for example: 2014-05-02T18",
  cpuSeconds as "how many seconds our CPU spent working with
    the container during this hour. Can easily be over 3600, since
    we may have multiple CPU's working with the container",
  bytesIn as "an integer number of bytes came into the container",
  bytesOut as "an integer number of bytes came out of the container".

PayPal is "a payment processing system, at www.paypal.com". PayPal is an actor.
PayPal includes:
  credentials as "secret data for payment authorization".

Application is "a custom sofware application packaged inside
  Repository and executed in a Container".
